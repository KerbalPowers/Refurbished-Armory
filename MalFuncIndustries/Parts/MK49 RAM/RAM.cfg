PART
{
	// Kerbal Space Program - Part Config

	// --- general parameters ---
	name = RAMLauncherTurret
	module = Part
	author = Themorris

	// --- asset parameters ---
	mesh = model.mu
	rescaleFactor = 100


	// --- node definitions ---
	node_attach = 0.0, 0.0, 0.0, 0, -1, 0, 0
	node_stack_bottom = 0.0, 0.0, 0.0, 0, -1, 0, 2
	
	//node_stack_missile1 = 0.8587526, 0.7144908, -2.094282, 0, 0, 1, 0
	NODE
	{
		name = missile1
		transform = missile1 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile2
		transform = missile2 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile3
		transform = missile3 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile4
		transform = missile4 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile5
		transform = missile5 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile6
		transform = missile6 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile7
		transform = missile7 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile8
		transform = missile8 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile9
		transform = missile9 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile10
		transform = missile10 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile11
		transform = missile11 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile12
		transform = missile12 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile13
		transform = missile13 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = missile14
		transform = missile14 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = missile15
		transform = missile15 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = missile16
		transform = missile16 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = missile17
		transform = missile17 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = missile18
		transform = missile18 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = missile19
		transform = missile19 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = missile20
		transform = missile20 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = missile21
		transform = missile21 // Or whatever your transform name is.
		size = 1.0 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	
	stackSymmetry = 1

	// --- editor parameters ---
	TechRequired = precisionEngineering
	entryCost = 2100
	cost = 950
	category = none
	subcategory = 0
	title = MK-49 Launcher
	manufacturer = MalFunc Industries
	description = The MK-49 Launcher, also known as RAM-Launcher, is capable of holding up to 21 RIM-116 Rolling Airframe Missiles (RAM).
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,0,1

	// --- standard part parameters ---
	mass = 1.75
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 60
	maxTemp = 3600


	MODULE
	{
		name = ModuleTurret
		
		turretID = 0
		
		pitchTransformName = pitchTransform
		yawTransformName = yawTransform
		
		pitchSpeedDPS = 120
		yawSpeedDPS = 120
		
		maxPitch = 85
		minPitch = -20
		
		yawRange = 360
		
		smoothRotation = true
		smoothMultiplier = 10
		
		audioPath = BDArmory/Sounds/hydraulicLoop
		maxAudioPitch = 0.42
		minAudioPitch = 0.15
	}

	MODULE
	{
		name = MissileTurret
		
		turretID = 0
		
		finalTransformName = pitchTransform

		railLength = 3
		firePauseTime = 0.45
	}

	
	
	MODULE
	{
		name = BDACategoryModule
	}
	MODULE
	{
		name = ModuleKerbalKrashSystem_Exclude
		_toleranceScaling = 2.0
		_malleability = 2.0
	}
}
